version: "3.7"

services:
    kafka:
        container_name: "r-uber-kafka"
        image: docker.io/bitnami/kafka:3.5
        ports:
            - "9092:9092"
            - "9094:9094"
        environment:
            # KRaft settings
            - KAFKA_CFG_NODE_ID=0
            - KAFKA_CFG_PROCESS_ROLES=controller,broker
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
            # Listeners
            - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://:9094
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,,EXTERNAL://localhost:9094
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
        volumes:
            - /data/r-uber/kafka:/bitnami/kafka

    kafka-init:
        container_name: "r-uber-kafka-init"
        image: confluentinc/cp-kafka:7.5.1
        depends_on:
            - "kafka"
        entrypoint: [ "/bin/sh", "-c" ]
        command: |
            "
            # blocks until kafka is reachable
            kafka-topics --bootstrap-server kafka:9092 --list

            echo -e 'Creating kafka topics'
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic uber-race --replication-factor 1 --partitions 1
    
            echo -e 'Successfully created the following topics:'
            kafka-topics --bootstrap-server kafka:9092 --list
            "
